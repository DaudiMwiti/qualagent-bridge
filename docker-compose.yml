
version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qualagents
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DB_POOL_SIZE=10
      - DB_MAX_OVERFLOW=20
      - SEARCH_CACHE_TTL=3600  # 1 hour cache
      - ENABLE_CACHE=1
      # Hybrid AI Architecture
      - HF_API_KEY=${HF_API_KEY}
      - REPLICATE_API_TOKEN=${REPLICATE_API_TOKEN}
      - COHERE_API_KEY=${COHERE_API_KEY}
      - SYMBL_API_KEY=${SYMBL_API_KEY}
      # Feature Flags
      - USE_OPENSOURCE_EMBED=${USE_OPENSOURCE_EMBED:-1}
      - SENTIMENT_PROVIDER=${SENTIMENT_PROVIDER:-hybrid}
      - PARAM_EXTRACTION_PROVIDER=${PARAM_EXTRACTION_PROVIDER:-openai}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    command: uvicorn src.app:app --host 0.0.0.0 --port 8000 --workers 4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  db:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qualagents
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

volumes:
  postgres_data:
